// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id  Int @id @default(autoincrement())
  firstName String
  lastName String
  dateOfBirth DateTime
  phoneNumber String?
  email String?
  image String?
  registeredAt DateTime @default(now())
  lastLogin DateTime @updatedAt
  userCartProducts UserCartProduct[]
}

model Product{
  id Int @id @default(autoincrement())
  name String @unique
  description String
  defaultPrice Float
  category String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  image String[]
  variants ProductVariant[]

}

model ProductVariant{
  id Int @id @default(autoincrement())
  productId Int
  size String
  color String
  price Float
  stock Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  userCartProducts UserCartProduct[]

  @@unique([productId, size, color])
}


model UserCartProduct{
  userId Int
  productVariantId Int
  quantity Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  productVariants ProductVariant @relation(fields: [productVariantId], references: [id])
  
  @@unique([userId, productVariantId])
}
